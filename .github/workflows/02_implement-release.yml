
name: 02-implement release Workflow
run-name: implementing Change ${{ join(github.event.issue.labels.*.name,',') }}
on:
  issues:
    types: [ closed, reopened]
  workflow_dispatch:
jobs:
  pre-implementation-job:
    if: |
      contains(github.event.issue.labels.*.name, 'gearid-1234') && contains(github.event.issue.title, 'waiting for change window')
    name: Pre-release-implementation
    runs-on: [ubuntu-org,ubuntu-org4]
    steps:
    - name: set env Variables
      env:
        GITHUB_CONTEXT: ${{toJson(github)}}
        issuelabels: "${{ join(github.event.issue.labels.*.name,',') }}"
      run: |
        echo "labels=${{ join(github.event.issue.labels.*.name,',') }}" >> $GITHUB_ENV
        echo " this is the issue action ${{ github.event.action }}" 
        echo "this is the issue lable ${{ join(github.event.issue.labels.*.name,',') }}"
          
    - uses: octokit/request-action@v2.x
      name: Get ADM issue status
      id: get_adm_issue_status
      with:
        route: GET /repos/{owner}/{repo}/issues
        repo: 'compliance-team'
        owner: 'imurpalvicky-org'
        labels: ${{ env.labels }}
        state: "all"
      env:
        GITHUB_TOKEN: ${{ SECRETS.GIT_PER_TOKEN }}
        
    - name: "ADM approval provided is closed?"
      if: ${{fromJson(steps.get_adm_issue_status.outputs.data)[0].state == 'closed'}} 
      run: |
        echo "Release Approved by ADM team as ${{fromJson(steps.get_adm_issue_status.outputs.data)[0].state}}" 
    - name: "ADM approval provided is not closed?"
      if: ${{fromJson(steps.get_adm_issue_status.outputs.data)[0].state != 'closed'}}
      run: |
        echo "Release disapproved by ADM team as ${{fromJson(steps.get_adm_issue_status.outputs.data)[0].state}}" 
        exit 1
    outputs:
        issue_labels: ${{ env.labels }}
        
  RunDeploy-job1:
      if: |
        contains(github.event.issue.labels.*.name, 'gearid-1234') && contains(github.event.issue.title, 'waiting for change window')
      needs: pre-implementation-job
      runs-on: [ubuntu-org,ubuntu-org4]
      steps:
      - name: "Jenkins deployment Job1"
        run: |
          echo "Run Jenkins job and wait for two hours "
  RunDeploy-job2:
      if: |
        contains(github.event.issue.labels.*.name, 'gearid-1234') && contains(github.event.issue.title, 'waiting for change window')
      needs: pre-implementation-job
      runs-on: [ubuntu-org,ubuntu-org4]
      steps:
      - name: "Jenkins deployment Job2"
        run: |
          echo "Run Jenkins job and wait for two hours "
          SUMMARY=$'# Job Summary\n## Jenkins job and wait for two hours for completion  \nsuccessful \n'
          echo "$SUMMARY Deplpoyment completed successfully! ðŸš€ " >> $GITHUB_STEP_SUMMARY
  validationworkitem-creation:
        if: |
          contains(github.event.issue.labels.*.name, 'gearid-1234') && contains(github.event.issue.title, 'waiting for change window')
        needs: [RunDeploy-job2,pre-implementation-job]
        runs-on: [ubuntu-org,ubuntu-org4]
        steps:
          - name: "create an workitem for App Release engineer team to validate the deployment"
            id: "validationworkitemid"
            uses: dacbd/create-issue-action@main
            with:
              token: ${{ SECRETS.GIT_PER_TOKEN }}
              title: Validate the deployment for  ${{ needs.pre-implementation-job.outputs.issue_labels }}
              body:  |
                # Body
                Please close the issue once you validate the deployment
              assignees: imurpalvicky
              labels: ${{ needs.pre-implementation-job.outputs.issue_labels }}
          - run: |
              echo "Run Jenkins job and wait for two hours "
              SUMMARY=$'# Job Summary\n## Jenkins job and wait for two hours for completion  \nsuccessful \n'
              echo "$SUMMARY ----- validate deployment and approve the workitem ${{ steps.validationworkitemid.outputs.html_url }}  ------- " >> $GITHUB_STEP_SUMMARY
        
